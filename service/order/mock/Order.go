// Code generated by mockery v2.10.0. DO NOT EDIT.

package mock

import (
	context "context"

	model "github.com/soundrussian/go-practicum-diploma/model"
	mock "github.com/stretchr/testify/mock"
)

// Order is an autogenerated mock type for the Order type
type Order struct {
	mock.Mock
}

// AcceptOrder provides a mock function with given fields: ctx, userID, orderID
func (_m *Order) AcceptOrder(ctx context.Context, userID uint64, orderID string) error {
	ret := _m.Called(ctx, userID, orderID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uint64, string) error); ok {
		r0 = rf(ctx, userID, orderID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UserOrders provides a mock function with given fields: ctx, userID
func (_m *Order) UserOrders(ctx context.Context, userID uint64) ([]model.Order, error) {
	ret := _m.Called(ctx, userID)

	var r0 []model.Order
	if rf, ok := ret.Get(0).(func(context.Context, uint64) []model.Order); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Order)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, uint64) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
