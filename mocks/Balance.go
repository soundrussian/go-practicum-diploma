// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/soundrussian/go-practicum-diploma/model"
	mock "github.com/stretchr/testify/mock"
)

// Balance is an autogenerated mock type for the Balance type
type Balance struct {
	mock.Mock
}

// UserBalance provides a mock function with given fields: ctx, userID
func (_m *Balance) UserBalance(ctx context.Context, userID uint64) (*model.UserBalance, error) {
	ret := _m.Called(ctx, userID)

	var r0 *model.UserBalance
	if rf, ok := ret.Get(0).(func(context.Context, uint64) *model.UserBalance); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.UserBalance)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, uint64) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Withdraw provides a mock function with given fields: ctx, userID, withdrawal
func (_m *Balance) Withdraw(ctx context.Context, userID uint64, withdrawal model.Withdrawal) error {
	ret := _m.Called(ctx, userID, withdrawal)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uint64, model.Withdrawal) error); ok {
		r0 = rf(ctx, userID, withdrawal)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
